<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Streameus</name>
    </assembly>
    <members>
        <member name="M:Streameus.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Streameus.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Streameus.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Streameus.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Streameus.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Streameus.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Streameus.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Streameus.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Streameus.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Streameus.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:Streameus.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Streameus.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Streameus.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleKey.#ctor(Streameus.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Streameus.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Streameus.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Streameus.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Streameus.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Streameus.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Streameus.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Streameus.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Streameus.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Streameus.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Streameus.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Streameus.Areas.HelpPage.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            
            </summary>
            <param name="controllerDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            
            </summary>
            <param name="parameterDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Areas.HelpPage.XmlDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="T:Streameus.Controllers.BaseController">
            <summary>
            This is here only in case extensions are needed
            </summary>
        </member>
        <member name="T:Streameus.Controllers.ConferenceController">
            <summary>
            Conference controller
            </summary>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.#ctor(Streameus.DataAbstractionLayer.Contracts.IConferenceServices)">
            <summary>
            Default constructor
            </summary>
            <param name="conferenceServices"></param>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.Get">
            <summary>
            Retourne toutes les conferences
            </summary>
            <returns></returns>
            <responseCode></responseCode>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.Get(System.Int32)">
            <summary>
            Get one conference
            </summary>
            <param name="id">the id of the conference</param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException"></exception>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.Post(Streameus.ViewModels.ConferenceFormViewModel)">
            <summary>
            Create a new conference
            </summary>
            <param name="conference">the infos for the new conference</param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.Put(Streameus.ViewModels.ConferenceFormViewModel)">
            <summary>
            Update a conference
            </summary>
            <param name="conference"></param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException"></exception>
        </member>
        <member name="M:Streameus.Controllers.ConferenceController.Delete(System.Int32)">
            <summary>
            Delete a conference
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Streameus.Controllers.FollowerController">
            <summary>
            Controller to get the followers of an user
            </summary>
        </member>
        <member name="M:Streameus.Controllers.FollowerController.#ctor(Streameus.DataAbstractionLayer.Contracts.IUserServices)">
            <summary>
            Default constructor
            </summary>
            <param name="userServices"></param>
        </member>
        <member name="M:Streameus.Controllers.FollowerController.Get(System.Int32)">
            <summary>
            Get all the followers for an user
            </summary>
            <param name="id">The user id</param>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NoResultException">If the user doesn't have any followers</exception>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.NoResultException">If the user doesn't have any followers</exception>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException">If the user doesn't exists</exception>
        </member>
        <member name="T:Streameus.Controllers.FollowingController">
            <summary>
            The controller to see/set an users abonnements
            </summary>
        </member>
        <member name="M:Streameus.Controllers.FollowingController.#ctor(Streameus.DataAbstractionLayer.Contracts.IUserServices)">
            <summary>
            Default constructor
            </summary>
            <param name="userServices"></param>
        </member>
        <member name="M:Streameus.Controllers.FollowingController.Get(System.Int32)">
            <summary>
            Get all the person's this user is following
            </summary>
            <param name="id">the user id</param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException"></exception>
        </member>
        <member name="M:Streameus.Controllers.FollowingController.Post(System.Int32)">
            <summary>
            Follow somebody
            </summary>
            <param name="id">the id of the user to follow</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Streameus.Controllers.FollowingController.Delete(System.Int32)">
            <summary>
            Stop following somebody
            </summary>
            <param name="id">the id of the user to stop following</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Streameus.Controllers.PrivacyController">
            <summary>
            Controller in charge of the privacy settings
            </summary>
        </member>
        <member name="M:Streameus.Controllers.PrivacyController.#ctor(Streameus.DataAbstractionLayer.Contracts.IUserServices)">
            <summary>
            Default constructor
            </summary>
            <param name="userServices"></param>
        </member>
        <member name="M:Streameus.Controllers.PrivacyController.Get(System.Int32)">
            <summary>
            Get privacy settings for an user
            </summary>
            <param name="id">User Id</param>
            <returns>the user's privacy settigns</returns>
        </member>
        <member name="M:Streameus.Controllers.PrivacyController.Put(System.Int32,Streameus.ViewModels.PrivacyViewModel)">
            <summary>
            Update an user's privacy settings. Only specified values are taken into account
            </summary>
            <param name="id">The id of the user to be updated</param>
            <param name="privacy">the view model</param>
        </member>
        <member name="T:Streameus.Controllers.UserController">
            <summary>
            User controller
            </summary>
        </member>
        <member name="M:Streameus.Controllers.UserController.#ctor(Streameus.DataAbstractionLayer.Contracts.IUserServices)">
            <summary>
            Default constructor
            </summary>
            <param name="userServices"></param>
        </member>
        <member name="M:Streameus.Controllers.UserController.Get">
            <summary>
            Get all the users
            </summary>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.NoResultException"></exception>
        </member>
        <member name="M:Streameus.Controllers.UserController.Get(System.Int32)">
            <summary>
            Get one user
            </summary>
            <param name="id">the id of the user to get</param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Controllers.UserController.Post(Streameus.ViewModels.UserViewModel)">
            <summary>
            Create a new user
            </summary>
            <param name="userViewModel"></param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.ConflictdException">An user already exist with same infos</exception>
        </member>
        <member name="M:Streameus.Controllers.UserController.Put(System.Int32,Streameus.ViewModels.UserViewModel)">
            <summary>
            Update an user
            </summary>
            <param name="id"></param>
            <param name="userViewModel"></param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.ConflictdException">An user already exist with same infos</exception>
        </member>
        <member name="M:Streameus.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Delete a user
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Contracts.IBaseServices`1">
            <summary>
            Base services interface for every entity
            </summary>
            <typeparam name="TEntity">The entity type</typeparam>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IBaseServices`1.GetById(System.Int32)">
            <summary>
            Get an entity by it's id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IBaseServices`1.GetAll">
            <summary>
            Return all existing entry for this entity
            </summary>
            <returns></returns>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Contracts.IConferenceParametersServices">
            <summary>
            Interface for Conference Parameters services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IConferenceParametersServices.Delete(Streameus.Models.ConferenceParameters)">
            <summary>
            Delete the conference parameters
            </summary>
            <remarks>No call to savechanges</remarks>
            <param name="conferenceParameters">the object to be deleted</param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Contracts.IConferenceServices">
            <summary>
            Interface for the conference services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IConferenceServices.Delete(System.Int32)">
            <summary>
            Delete a conference
            </summary>
            <param name="id">The id of the conference</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IConferenceServices.AddConference(Streameus.Models.Conference)">
            <summary>
            Add a new conference
            </summary>
            <param name="newConf">The conference to be added</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IConferenceServices.UpdateConference(Streameus.Models.Conference)">
            <summary>
            Updates a conference
            </summary>
            <param name="updatedConf"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Contracts.IParametersServices">
            <summary>
            Interface for the parameters services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IParametersServices.Delete(Streameus.Models.Parameters)">
            <summary>
            Delete parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Contracts.IUserServices">
            <summary>
            The interface for the user services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IUserServices.AddUser(Streameus.Models.User)">
            <summary>
            Add a new user
            </summary>
            <param name="newUser">the user to be added</param>
            <exception cref="T:Streameus.Exceptions.DuplicateEntryException">A user already exists with the same pseudo or email</exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IUserServices.UpdateUser(Streameus.Models.User)">
            <summary>
            Update a new user
            </summary>
            <param name="user">The user to be updated</param>
            <exception cref="T:Streameus.Exceptions.DuplicateEntryException"></exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IUserServices.Delete(System.Int32)">
            <summary>
            Delete an user
            </summary>
            <param name="id">Id of the user to be deleted</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IUserServices.GetFollowersForUser(System.Int32)">
            <summary>
            Returns all the user's followers
            </summary>
            <param name="id">userId</param>
            <exception cref="T:Streameus.Exceptions.NoResultException">If user doesnt exists</exception>
            <exception cref="T:Streameus.Exceptions.EmptyResultException">If user doesnt have any followers</exception>
            <returns>A list containing all the followers for the selected user</returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Contracts.IUserServices.GetAbonnementsForUser(System.Int32)">
            <summary>
            Get all the abonnements of an user
            </summary>
            <param name="id">the user id</param>
            <returns>a list of users</returns>
            <exception cref="T:Streameus.Exceptions.EmptyResultException">No followings</exception>
            <exception cref="T:Streameus.Exceptions.NoResultException">The user wasn't found</exception>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Initializers.DropCreateDatabaseTables`1">
            <summary>
            Ne marche que sur SQLSERVER!!
            Cette classe permet de recreer les tables d'une DB sans drop la table.
            Pratique en cas de droits limites. 
            Le seed par defaut ne fait rien
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Initializers.DropCreateDatabaseTables`1.InitializeDatabase(`0)">
            <summary>
            Executes the strategy to initialize the database for the given context.
            </summary>
            <param name="context">The context. </param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Initializers.DropCreateDatabaseTables`1.Seed(`0)">
            <summary>
            Seed the DB, default does nothing
            </summary>
            <param name="context">DBContext currently used</param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Initializers.StreameusInitializerForAppHarbor">
            <summary>
            This class is used to initialize Streameus Db with appharbor's constraints
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Initializers.StreameusInitializerForAppHarbor.Seed(Streameus.DataAbstractionLayer.StreameusContainer)">
            <summary>
            Call the default seed method <see cref="T:Streameus.DataAbstractionLayer.Initializers.StreameusSeeder"/>
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Initializers.StreameusSeeder">
            <summary>
            This class is used to seed Streameus Db
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Initializers.StreameusSeeder.Seed(Streameus.DataAbstractionLayer.StreameusContainer)">
            <summary>
            This methods fills the database with dummy datas
            </summary>
            <param name="context">The dbcontext to be seeded</param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Services.BaseServices`1">
            <summary>
            The base services for all services
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:Streameus.DataAbstractionLayer.Services.BaseServices`1.UnitOfWork">
            <summary>
            Unit of work
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.#ctor(Streameus.DataBaseAccess.IUnitOfWork)">
            <summary>
            Default constructor
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.Update(`0)">
            <summary>
            Default update method for an entity
            </summary>
            <param name="entityToUpdate"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.Insert(`0)">
            <summary>
            Default insert method for an entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.Save(`0)">
            <summary>
            Save the entity
            </summary>
            <param name="dataObject"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.GetById(System.Int32)">
            <summary>
            Get an entity by its id
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException"></exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.GetAll">
            <summary>
            Return all the Entity in a set
            </summary>
            <returns></returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.Delete(System.Int32)">
            <summary>
            Default method to delete an entity
            </summary>
            <remarks>No call to SaveChanges are made</remarks>
            <param name="id">id of the entity (entity will be fetched)</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.Delete(`0)">
            <summary>
            Default method to delete an entity
            </summary>
            <remarks>No call to SaveChanges are made</remarks>
            <param name="entityToDelete"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.GetDbSet``1">
            <summary>
            Return the entity dbSet
            </summary>
            <typeparam name="TRequestedEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.BaseServices`1.SaveChanges">
            <summary>
            Persists changes in DataStore
            </summary>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Services.ConferenceServices">
            <summary>
            The conference services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceServices.#ctor(Streameus.DataBaseAccess.IUnitOfWork,Streameus.DataAbstractionLayer.Contracts.IConferenceParametersServices)">
            <summary>
            default constructor
            </summary>
            <param name="unitOfWork"></param>
            <param name="conferenceParametersServices"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceServices.Save(Streameus.Models.Conference)">
            <summary>
            Save a conference
            </summary>
            <param name="conference"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceServices.Delete(System.Int32)">
            <summary>
            Delete a conference
            </summary>
            <param name="id"></param>
            <exception cref="T:Streameus.Exceptions.HttpErrors.NotFoundException"></exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceServices.AddConference(Streameus.Models.Conference)">
            <summary>
            Add a conference
            </summary>
            <param name="newConf"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceServices.UpdateConference(Streameus.Models.Conference)">
            <summary>
            Update a conference
            </summary>
            <param name="updatedConf"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Services.ConferenceParametersServices">
            <summary>
            Conference parameters services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceParametersServices.#ctor(Streameus.DataBaseAccess.IUnitOfWork)">
            <summary>
            Default constructor
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceParametersServices.Save(Streameus.Models.ConferenceParameters)">
            <summary>
            Save the entity
            </summary>
            <param name="confParam">Entity</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ConferenceParametersServices.Delete(Streameus.Models.ConferenceParameters)">
            <summary>
            Delete Conference parameters
            </summary>
            <remarks>No call to SaveChanges</remarks>
            <param name="conferenceParameters"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Services.ParametersServices">
            <summary>
            Parameters services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ParametersServices.#ctor(Streameus.DataBaseAccess.IUnitOfWork)">
            <summary>
            Default constructor
            </summary>
            <param name="unitOfWork">The unit of work</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ParametersServices.Save(Streameus.Models.Parameters)">
            <summary>
            Save the parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.ParametersServices.Delete(Streameus.Models.Parameters)">
            <summary>
            Efface un parametre.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Services.UserServices">
            <summary>
            User services
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.#ctor(Streameus.DataBaseAccess.IUnitOfWork,Streameus.DataAbstractionLayer.Contracts.IParametersServices)">
            <summary>
            Default constructor
            </summary>
            <param name="unitOfWork"></param>
            <param name="parametersServices"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.Save(Streameus.Models.User)">
            <summary>
            Save user
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.AddUser(Streameus.Models.User)">
            <summary>
            Add a new user in db
            </summary>
            <param name="newUser">The user to be added</param>
            <exception cref="T:Streameus.Exceptions.DuplicateEntryException">A user already exists with the same pseudo or email</exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.UpdateUser(Streameus.Models.User)">
            <summary>
            Update an user
            </summary>
            <param name="user"></param>
            <exception cref="T:Streameus.Exceptions.DuplicateEntryException"></exception>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.Delete(System.Int32)">
            <summary>
            Delete an user
            </summary>
            <param name="id">Id of the user to be deleted</param>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.GetFollowersForUser(System.Int32)">
            <summary>
            Returns all the user's followers
            </summary>
            <param name="id">userId</param>
            <exception cref="T:Streameus.Exceptions.NoResultException">If user doesnt exists</exception>
            <exception cref="T:Streameus.Exceptions.EmptyResultException">If user doesnt have any followers</exception>
            <returns>A list containing all the followers for the selected user</returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.GetAbonnementsForUser(System.Int32)">
            <summary>
            Get all the abonnements for a user
            </summary>
            <param name="id"></param>
            <exception cref="T:Streameus.Exceptions.EmptyResultException">No followings</exception>
            <exception cref="T:Streameus.Exceptions.NoResultException">The user wasn't found</exception>
            <returns></returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.IsUserPseudoUnique(Streameus.Models.User)">
            <summary>
            Check if user pseudo exists in db
            </summary>
            <param name="user">The user to be checked</param>
            <returns>Returns true if the pseudo doesnt exists</returns>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Services.UserServices.IsUserEmailUnique(Streameus.Models.User)">
            <summary>
            Check if user email exists in db
            </summary>
            <param name="user">The user to be checked</param>
            <returns>Returns true if the email doesnt exists</returns>
        </member>
        <member name="T:Streameus.DataAbstractionLayer.Initializers.StreameusInitializer">
            <summary>
            This is the default class used to initialize streameus
            </summary>
        </member>
        <member name="M:Streameus.DataAbstractionLayer.Initializers.StreameusInitializer.Seed(Streameus.DataAbstractionLayer.StreameusContainer)">
            <summary>
            A method that should be overridden to actually add data to the context for seeding.
                        The default implementation does nothing.
            </summary>
            <param name="context">The context to seed. </param>
        </member>
        <member name="T:Streameus.Models.User">
            <summary>
            An user
            </summary>
        </member>
        <member name="P:Streameus.Models.User.FullName">
            <summary>
            Return an user full name
            </summary>
        </member>
        <member name="T:Streameus.DataBaseAccess.IUnitOfWork">
            <summary>
            Interface for the unitOfWork pattern
            </summary>
        </member>
        <member name="M:Streameus.DataBaseAccess.IUnitOfWork.SaveChanges">
            <summary>
            Persists changes in db
            </summary>
        </member>
        <member name="M:Streameus.DataBaseAccess.IUnitOfWork.GetDbSet``1">
            <summary>
            Get one of the entity set stored in the context
            </summary>
            <typeparam name="TEntity">The type of set to retrieve</typeparam>
            <returns>The entity type set</returns>
        </member>
        <member name="P:Streameus.DataBaseAccess.IUnitOfWork.Context">
            <summary>
            Get the context used within the unit of work
            </summary>
        </member>
        <member name="T:Streameus.DataBaseAccess.UnitOfWork">
            <summary>
            The unit of work implementation
            </summary>
        </member>
        <member name="M:Streameus.DataBaseAccess.UnitOfWork.#ctor(Streameus.DataAbstractionLayer.StreameusContainer)">
            <summary>
            Default constructor
            </summary>
            <param name="context">The context to be used </param>
        </member>
        <member name="M:Streameus.DataBaseAccess.UnitOfWork.SaveChanges">
            <summary>
            Persists changes to DataStore
            </summary>
        </member>
        <member name="M:Streameus.DataBaseAccess.UnitOfWork.GetDbSet``1">
            <summary>
            Return an entity's set
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Streameus.DataBaseAccess.UnitOfWork.Dispose(System.Boolean)">
            <summary>
            Dispose of the resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Streameus.DataBaseAccess.UnitOfWork.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Streameus.DataBaseAccess.UnitOfWork.Context">
            <summary>
            Get the DbContext uset in the UnitOfWork
            </summary>
        </member>
        <member name="T:Streameus.Documentation.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Streameus.Documentation.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Streameus.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Streameus.Documentation.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            
            </summary>
            <param name="controllerDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Documentation.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Documentation.XmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            
            </summary>
            <param name="parameterDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Streameus.Documentation.XmlDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="T:Streameus.Enums.DataBaseEnums">
            <summary>
            This class contains all the enums used for db storage
            </summary>
        </member>
        <member name="T:Streameus.Enums.DataBaseEnums.ConfStatus">
            <summary>
            Used to describe the status of the conference
            </summary>
        </member>
        <member name="F:Streameus.Enums.DataBaseEnums.ConfStatus.EnCours">
            <summary>
            Conf is ongoing
            </summary>
        </member>
        <member name="F:Streameus.Enums.DataBaseEnums.ConfStatus.AVenir">
            <summary>
            Conf is to be started
            </summary>
        </member>
        <member name="F:Streameus.Enums.DataBaseEnums.ConfStatus.Finie">
            <summary>
            Conf is done
            </summary>
        </member>
        <member name="T:Streameus.Exceptions.EmptyResultException">
            <summary>
            Exception thrown when the result is an empty list or empty array
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.EmptyResultException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Specific error message</param>
        </member>
        <member name="T:Streameus.Exceptions.HttpErrors.BadRequestException">
            <summary>
            Exception thrown when the request is malformed (400)
            </summary>
        </member>
        <member name="T:Streameus.Exceptions.HttpErrors.ApiException">
            <summary>
            Classe de base pour les exceptions de l'API
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.ApiException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="statusCode">Code d'erreur</param>
            <param name="reason">Message d'erreur</param>
            <param name="ex">Exception</param>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.ApiException.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            
            </summary>
            <param name="statusCode">Code d'erreur</param>
            <param name="reason">Message d'erreur</param>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.ApiException.#ctor(System.Net.HttpStatusCode)">
            <summary>
            
            </summary>
            <param name="statusCode">Code d'erreur</param>
        </member>
        <member name="P:Streameus.Exceptions.HttpErrors.ApiException.StatusCode">
            <summary>
            Get errors' status code
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.BadRequestException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.BadRequestException.#ctor(System.String)">
            <summary>
            Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Streameus.Exceptions.HttpErrors.ConflictdException">
            <summary>
            Exception thrown in case of conflict with ressource provided (409)
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.ConflictdException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.ConflictdException.#ctor(System.String)">
            <summary>
            Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Streameus.Exceptions.HttpErrors.NoResultException">
            <summary>
            Exception thrown when there is no results (204)
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.NoResultException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.NoResultException.#ctor(System.String)">
            <summary>
            Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Streameus.Exceptions.HttpErrors.NotFoundException">
            <summary>
            Exception thrown when the resource was not found (404)
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.NotFoundException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.HttpErrors.NotFoundException.#ctor(System.String)">
            <summary>
            Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Streameus.Hooks.ApiExceptionFilterAttribute">
            <summary>
            Cette classe permet de retourner une herreur http en cas d'exception
            </summary>
        </member>
        <member name="M:Streameus.Hooks.ApiExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Raises the exception event.
            </summary>
            <param name="context">The context for the action.</param>
        </member>
        <member name="T:Streameus.Hooks.ValidateModelAttribute">
            <summary>
            Permet de valider automatiquement les models
            </summary>
        </member>
        <member name="M:Streameus.Hooks.ValidateModelAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="T:Streameus.Exceptions.NoResultException">
            <summary>
            Exception thrown when no results are found (wrong id for example)
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.NoResultException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Specific error message</param>
        </member>
        <member name="T:Streameus.Exceptions.DuplicateEntryException">
            <summary>
            Exception thrown when duplicates are found
            </summary>
        </member>
        <member name="M:Streameus.Exceptions.DuplicateEntryException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">specific error message</param>
        </member>
        <member name="T:Streameus.ViewModels.ConferenceFormViewModel">
            <summary>
            Conference View Model used for creation and modification
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceFormViewModel.Id">
            <summary>
            Conference Id
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceFormViewModel.Name">
            <summary>
            Conference name
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceFormViewModel.Description">
            <summary>
            Conference description
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceFormViewModel.Time">
            <summary>
            Conference scheduled time
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceFormViewModel.ScheduledDuration">
            <summary>
            Time in minutes for the conference scheduled duration
            </summary>
        </member>
        <member name="T:Streameus.ViewModels.ConferenceViewModel">
            <summary>
            A view model for the conference
            </summary>
        </member>
        <member name="M:Streameus.ViewModels.ConferenceViewModel.#ctor(Streameus.Models.Conference)">
            <summary>
            Create a vm based on a conference
            </summary>
            <param name="conf"></param>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Id">
            <summary>
            Conference Id
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Owner">
            <summary>
            Id of the user whho owns the conf
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Name">
            <summary>
            Conference name
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Status">
            <summary>
            Status of the conference
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.Time">
            <summary>
            The time the conference is/was scheduled
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.ScheduledDuration">
            <summary>
            The conference's scheduled duration
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.ConferenceViewModel.FinalDuration">
            <summary>
            The conference final duration
            </summary>
        </member>
        <member name="T:Streameus.ViewModels.PrivacyViewModel">
            <summary>
            The viewModel used to set the privacy options
            </summary>
        </member>
        <member name="M:Streameus.ViewModels.PrivacyViewModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Streameus.ViewModels.PrivacyViewModel.#ctor(Streameus.Models.User)">
            <summary>
            Gets the user privacy value to create the VM
            </summary>
            <param name="user">The user to be used</param>
        </member>
        <member name="M:Streameus.ViewModels.PrivacyViewModel.SetUserPrivacySettings(Streameus.Models.User@)">
            <summary>
            Set a user privacy settings from a <see cref="T:Streameus.ViewModels.PrivacyViewModel"/>
            </summary>
            <param name="user"></param>
        </member>
        <member name="P:Streameus.ViewModels.PrivacyViewModel.Email">
            <summary>
            Is email public
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.PrivacyViewModel.FirstName">
            <summary>
            Is first name public?
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.PrivacyViewModel.LastName">
            <summary>
            Is last name public?
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.PrivacyViewModel.Gender">
            <summary>
            Is gender public?
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.PrivacyViewModel.AbonnementsList">
            <summary>
            Is the abonnements list public?
            </summary>
        </member>
        <member name="T:Streameus.ViewModels.UserViewModel">
            <summary>
            The user view model is returned to the client to map a user
            </summary>
        </member>
        <member name="M:Streameus.ViewModels.UserViewModel.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Streameus.ViewModels.UserViewModel.#ctor(Streameus.Models.User)">
            <summary>
            Instantiate VM with a user's values
            </summary>
            <param name="user"></param>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Id">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Pseudo">
            <summary>
            User pseudo
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Email">
            <summary>
            User email
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.FirstName">
            <summary>
            User first name
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.LastName">
            <summary>
            User last name
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Gender">
            <summary>
            User gender, null if not said
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Reputation">
            <summary>
            reputation of the user
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.BirthDay">
            <summary>
            User birth day
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Phone">
            <summary>
            User phone
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Address">
            <summary>
            User address
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.City">
            <summary>
            User city
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Country">
            <summary>
            User country
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Website">
            <summary>
            User website
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Profession">
            <summary>
            User job
            </summary>
        </member>
        <member name="P:Streameus.ViewModels.UserViewModel.Description">
            <summary>
            User Description
            </summary>
        </member>
    </members>
</doc>
