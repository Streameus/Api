<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BilanCreateConfMonth" xml:space="preserve">
    <value>{0} has created {1} conference(s) during this month.</value>
  </data>
  <data name="BilanCreateConfWeek" xml:space="preserve">
    <value>{0} has created {1} conference(s) during this week.</value>
  </data>
  <data name="BilanFollowers" xml:space="preserve">
    <value>{0} has now {1} followers.</value>
    <comment>{1} nombre d'abonnés à afficher toutes les dizaines, centaines ?</comment>
  </data>
  <data name="BilanFollowingMonth" xml:space="preserve">
    <value>{0} start to follow {1} new people during this month.</value>
  </data>
  <data name="BilanFollowingWeek" xml:space="preserve">
    <value>{0} start to follow {1} new people during this week.</value>
    <comment>{1} nombre de personnes nouvellement suivies</comment>
  </data>
  <data name="BilanParticipateConfMonth" xml:space="preserve">
    <value>{0} has signed up to {1} conference(s) during this month.</value>
    <comment>{1} nombre de conférences auxquelles il a participé</comment>
  </data>
  <data name="BilanParticipateConfWeek" xml:space="preserve">
    <value>{0} has signed up to {1} conference(s) during this week</value>
  </data>
  <data name="BilanReputation" xml:space="preserve">
    <value>{0} has reached {1} reputation points.</value>
    <comment>{1} nombre de points à afficher ponctuellement</comment>
  </data>
  <data name="ChangePhoto" xml:space="preserve">
    <value>{0} has changed his photo.</value>
  </data>
  <data name="ConfDate" xml:space="preserve">
    <value>{0} has modified the date of the conference {1}, it will start the {2}.</value>
  </data>
  <data name="ConfDescription" xml:space="preserve">
    <value>{0} has changed the description of the conference {1}.</value>
  </data>
  <data name="ConferenceEnd" xml:space="preserve">
    <value>The conference {0} of {1} is finished !</value>
  </data>
  <data name="ConferenceStart" xml:space="preserve">
    <value>The conference {0} of {1} starts now !</value>
  </data>
  <data name="ConfTime" xml:space="preserve">
    <value>{0} has modified the time of the conference {1}, it will start at {2}.</value>
  </data>
  <data name="ConfTitle" xml:space="preserve">
    <value>{0} has changed the title of the conference {1}.</value>
  </data>
  <data name="CreateConf" xml:space="preserve">
    <value>{0} has planified the conference {1} the {2} at {3}.</value>
  </data>
  <data name="FirstFollower" xml:space="preserve">
    <value>{0} gets his first follower !</value>
  </data>
  <data name="ParticipateConf" xml:space="preserve">
    <value>{0} has participated to the conference {1}.</value>
  </data>
  <data name="RateConf" xml:space="preserve">
    <value>{0} has rated {1} stars the conference {2}.</value>
    <comment>{1} représente le nombre d'étoiles</comment>
  </data>
  <data name="Recommand" xml:space="preserve">
    <value>{0} recommand the conference {1}.</value>
  </data>
  <data name="ShareConf" xml:space="preserve">
    <value>{0} a shared the conference {1} of {2} which starts {3} at {4}</value>
  </data>
  <data name="StartFollow" xml:space="preserve">
    <value>{0} starts to follow {1}.</value>
  </data>
  <data name="SuscribeConf" xml:space="preserve">
    <value>{0} has signed up to the conference {1}.</value>
  </data>
  <data name="UpdateMsgPerso" xml:space="preserve">
    <value>{0} has updated his personal description {2}.</value>
    <comment>{2} affiche le petit mot</comment>
  </data>
  <data name="UserInvitation" xml:space="preserve">
    <value>{0} has invited you to the conference {1} of {2}.</value>
  </data>
  <data name="WillParticipateConf" xml:space="preserve">
    <value>{0} will participate at the conference {1} the {2} at {3}</value>
  </data>
</root>